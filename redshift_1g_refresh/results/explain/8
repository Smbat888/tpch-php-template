                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 XN Limit  (cost=1023399335147.38..1023399335147.38 rows=1 width=52)
   ->  XN Merge  (cost=1023399335147.38..1023399335149.20 rows=730 width=52)
         Merge Key: "date_part"('year'::text, orders.o_orderdate)
         ->  XN Network  (cost=1023399335147.38..1023399335149.20 rows=730 width=52)
               Send to leader
               ->  XN Sort  (cost=1023399335147.38..1023399335149.20 rows=730 width=52)
                     Sort Key: "date_part"('year'::text, orders.o_orderdate)
                     ->  XN HashAggregate  (cost=23399335096.23..23399335112.66 rows=730 width=52)
                           ->  XN Hash Join DS_BCAST_INNER  (cost=22426934769.19..23399335078.22 rows=2401 width=52)
                                 Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                                 ->  XN Hash Join DS_BCAST_INNER  (cost=22426934768.88..23387335017.89 rows=2401 width=31)
                                       Hash Cond: ("outer".s_suppkey = "inner".l_suppkey)
                                       ->  XN Seq Scan on supplier  (cost=0.00..100.00 rows=10000 width=16)
                                       ->  XN Hash  (cost=22426934762.88..22426934762.88 rows=2401 width=31)
                                             ->  XN Hash Join DS_BCAST_INNER  (cost=212141776.06..22426934762.88 rows=2401 width=31)
                                                   Hash Cond: ("outer".o_orderkey = "inner".l_orderkey)
                                                   ->  XN Hash Join DS_BCAST_INNER  (cost=963750.69..4800992846.80 rows=90981 width=12)
                                                         Hash Cond: ("outer".o_custkey = "inner".c_custkey)
                                                         ->  XN Seq Scan on orders  (cost=0.00..22500.00 rows=454904 width=20)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         ->  XN Hash  (cost=963675.69..963675.69 rows=30000 width=8)
                                                               ->  XN Hash Join DS_BCAST_INNER  (cost=160000.69..963675.69 rows=30000 width=8)
                                                                     Hash Cond: ("outer".c_nationkey = "inner".n_nationkey)
                                                                     ->  XN Seq Scan on customer  (cost=0.00..1500.00 rows=150000 width=16)
                                                                     ->  XN Hash  (cost=160000.68..160000.68 rows=5 width=8)
                                                                           ->  XN Hash Join DS_BCAST_INNER  (cost=0.07..160000.68 rows=5 width=8)
                                                                                 Hash Cond: ("outer".n_regionkey = "inner".r_regionkey)
                                                                                 ->  XN Seq Scan on nation n1  (cost=0.00..0.25 rows=25 width=16)
                                                                                 ->  XN Hash  (cost=0.06..0.06 rows=1 width=8)
                                                                                       ->  XN Seq Scan on "region"  (cost=0.00..0.06 rows=1 width=8)
                                                                                             Filter: (r_name = 'AFRICA'::bpchar)
                                                   ->  XN Hash  (cost=211177926.43..211177926.43 rows=39579 width=35)
                                                         ->  XN Hash Join DS_BCAST_INNER  (cost=2503.30..211177926.43 rows=39579 width=35)
                                                               Hash Cond: ("outer".l_partkey = "inner".p_partkey)
                                                               ->  XN Seq Scan on lineitem  (cost=0.00..60012.15 rows=6001215 width=43)
                                                               ->  XN Hash  (cost=2500.00..2500.00 rows=1319 width=8)
                                                                     ->  XN Seq Scan on part  (cost=0.00..2500.00 rows=1319 width=8)
                                                                           Filter: ((p_type)::text = 'SMALL POLISHED NICKEL'::text)
                                 ->  XN Hash  (cost=0.25..0.25 rows=25 width=37)
                                       ->  XN Seq Scan on nation n2  (cost=0.00..0.25 rows=25 width=37)
(40 rows)

 o_year | mkt_share 
--------+-----------
   1995 |    0.0489
(1 row)

