                                                             QUERY PLAN                                                             
------------------------------------------------------------------------------------------------------------------------------------
 XN Hash Join DS_BCAST_INNER  (cost=192261250.78..45001984305.04 rows=38856 width=45)
   Hash Cond: ("outer".o_orderkey = "inner".l_orderkey)
   ->  XN Seq Scan on orders  (cost=0.00..18750.00 rows=728379 width=8)
         Filter: ('F'::bpchar = o_orderstatus)
   ->  XN Hash  (cost=192261050.74..192261050.74 rows=80017 width=45)
         ->  XN Hash Join DS_BCAST_INNER  (cost=160230.32..192261050.74 rows=80017 width=45)
               Hash Cond: ("outer".l_suppkey = "inner".s_suppkey)
               ->  XN Seq Scan on lineitem l1  (cost=0.00..75015.19 rows=2000405 width=16)
                     Filter: (l_commitdate < l_receiptdate)
               ->  XN Hash  (cost=160229.32..160229.32 rows=400 width=37)
                     ->  XN Hash Join DS_BCAST_INNER  (cost=0.32..160229.32 rows=400 width=37)
                           Hash Cond: ("outer".s_nationkey = "inner".n_nationkey)
                           ->  XN Seq Scan on supplier  (cost=0.00..100.00 rows=10000 width=45)
                           ->  XN Hash  (cost=0.31..0.31 rows=1 width=8)
                                 ->  XN Seq Scan on nation  (cost=0.00..0.31 rows=1 width=8)
                                       Filter: ('ALGERIA'::bpchar = n_name)
 
 XN SetOp Except  (cost=1036975277052.30..1036975358838.50 rows=1090483 width=16)
   ->  XN Sort  (cost=1036975277052.30..1036975304314.37 rows=10904826 width=16)
         Sort Key: l_orderkey, l_suppkey
         ->  XN Append  (cost=962.85..36974002361.92 rows=10904826 width=16)
               ->  XN Subquery Scan "*SELECT* 1"  (cost=962.85..18487100031.65 rows=8178619 width=16)
                     ->  XN Hash Join DS_BCAST_INNER  (cost=962.85..18487018245.46 rows=8178619 width=16)
                           Hash Cond: ("outer".l_orderkey = "inner".l_orderkey)
                           Join Filter: ("inner".l_suppkey <> "outer".l_suppkey)
                           ->  XN Seq Scan on lineitem l2  (cost=0.00..60012.15 rows=6001215 width=16)
                           ->  XN Hash  (cost=770.28..770.28 rows=77028 width=16)
                                 ->  XN Seq Scan on volt_tt_5534458dac5d8  (cost=0.00..770.28 rows=77028 width=16)
               ->  XN Subquery Scan "*SELECT* 2"  (cost=962.85..18486902330.27 rows=2726207 width=16)
                     ->  XN Hash Join DS_BCAST_INNER  (cost=962.85..18486875068.20 rows=2726207 width=16)
                           Hash Cond: ("outer".l_orderkey = "inner".l_orderkey)
                           Join Filter: ("inner".l_suppkey <> "outer".l_suppkey)
                           ->  XN Seq Scan on lineitem l3  (cost=0.00..75015.19 rows=2000405 width=16)
                                 Filter: (l_commitdate < l_receiptdate)
                           ->  XN Hash  (cost=770.28..770.28 rows=77028 width=16)
                                 ->  XN Seq Scan on volt_tt_5534458dac5d8  (cost=0.00..770.28 rows=77028 width=16)
 
 XN Limit  (cost=1000981602785.15..1000981602785.40 rows=100 width=29)
   ->  XN Merge  (cost=1000981602785.15..1000981602786.20 rows=420 width=29)
         Merge Key: count(*), volt_tt_5534458dac5d8.s_name
         ->  XN Network  (cost=1000981602785.15..1000981602786.20 rows=420 width=29)
               Send to leader
               ->  XN Sort  (cost=1000981602785.15..1000981602786.20 rows=420 width=29)
                     Sort Key: count(*), volt_tt_5534458dac5d8.s_name
                     ->  XN HashAggregate  (cost=981602765.80..981602766.85 rows=420 width=29)
                           ->  XN Hash Join DS_BCAST_INNER  (cost=61.35..981602757.47 rows=1666 width=29)
                                 Hash Cond: (("outer".l_orderkey = "inner".l_orderkey) AND ("outer".l_suppkey = "inner".l_suppkey))
                                 ->  XN Seq Scan on volt_tt_5534458dac5d8  (cost=0.00..770.28 rows=77028 width=45)
                                 ->  XN Hash  (cost=40.90..40.90 rows=4090 width=16)
                                       ->  XN Seq Scan on volt_tt_5534458dad1cc  (cost=0.00..40.90 rows=4090 width=16)
(50 rows)

          s_name           | numwait 
---------------------------+---------
 Supplier#000003132        |      20
 Supplier#000008172        |      19
 Supplier#000002474        |      18
 Supplier#000003867        |      18
 Supplier#000005916        |      18
 Supplier#000007217        |      18
 Supplier#000001720        |      17
 Supplier#000004247        |      17
 Supplier#000007709        |      17
 Supplier#000007964        |      17
 Supplier#000000701        |      16
 Supplier#000003529        |      16
 Supplier#000003647        |      16
 Supplier#000005665        |      16
 Supplier#000000683        |      15
 Supplier#000001363        |      15
 Supplier#000003358        |      15
 Supplier#000003931        |      15
 Supplier#000004287        |      15
 Supplier#000004351        |      15
 Supplier#000004943        |      15
 Supplier#000009060        |      15
 Supplier#000009270        |      15
 Supplier#000009378        |      15
 Supplier#000009929        |      15
 Supplier#000000474        |      14
 Supplier#000000476        |      14
 Supplier#000000491        |      14
 Supplier#000001362        |      14
 Supplier#000001920        |      14
 Supplier#000002099        |      14
 Supplier#000002298        |      14
 Supplier#000003997        |      14
 Supplier#000004078        |      14
 Supplier#000004215        |      14
 Supplier#000004654        |      14
 Supplier#000004902        |      14
 Supplier#000004964        |      14
 Supplier#000005241        |      14
 Supplier#000005734        |      14
 Supplier#000006321        |      14
 Supplier#000006389        |      14
 Supplier#000006551        |      14
 Supplier#000006744        |      14
 Supplier#000006849        |      14
 Supplier#000007574        |      14
 Supplier#000007623        |      14
 Supplier#000008588        |      14
 Supplier#000001097        |      13
 Supplier#000001836        |      13
 Supplier#000003180        |      13
 Supplier#000003278        |      13
 Supplier#000004002        |      13
 Supplier#000004357        |      13
 Supplier#000004440        |      13
 Supplier#000004580        |      13
 Supplier#000004800        |      13
 Supplier#000005183        |      13
 Supplier#000005369        |      13
 Supplier#000005404        |      13
 Supplier#000005549        |      13
 Supplier#000006140        |      13
 Supplier#000006195        |      13
 Supplier#000006559        |      13
 Supplier#000006591        |      13
 Supplier#000006605        |      13
 Supplier#000006907        |      13
 Supplier#000006981        |      13
 Supplier#000009118        |      13
 Supplier#000000118        |      12
 Supplier#000000549        |      12
 Supplier#000000742        |      12
 Supplier#000000753        |      12
 Supplier#000001206        |      12
 Supplier#000001326        |      12
 Supplier#000001342        |      12
 Supplier#000001597        |      12
 Supplier#000001804        |      12
 Supplier#000001822        |      12
 Supplier#000001887        |      12
 Supplier#000002010        |      12
 Supplier#000002131        |      12
 Supplier#000002258        |      12
 Supplier#000002445        |      12
 Supplier#000002765        |      12
 Supplier#000002921        |      12
 Supplier#000002946        |      12
 Supplier#000003771        |      12
 Supplier#000005021        |      12
 Supplier#000006300        |      12
 Supplier#000006412        |      12
 Supplier#000006417        |      12
 Supplier#000006779        |      12
 Supplier#000007139        |      12
 Supplier#000007176        |      12
 Supplier#000007631        |      12
 Supplier#000007969        |      12
 Supplier#000008086        |      12
 Supplier#000008372        |      12
 Supplier#000008548        |      12
(100 rows)

